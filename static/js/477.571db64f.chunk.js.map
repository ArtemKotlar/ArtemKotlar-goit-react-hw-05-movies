{"version":3,"file":"static/js/477.571db64f.chunk.js","mappings":"uRAEMA,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,kCAMJC,EAAc,WACzB,OAAOH,EAASI,IAAI,8BAADC,OAA+BN,GACpD,EAEaO,EAAY,SAAAC,GACvB,OAAOP,EAASI,IAAI,wBAADC,OAAyBN,EAAO,WAAAM,OAAUE,GAC/D,EAEaC,EAAa,SAAAC,GACxB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,aAAAJ,OAAYN,GAC7C,EAEaW,EAAU,SAAAD,GACrB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,qBAAAJ,OAAoBN,GACrD,EAEaY,EAAa,SAAAF,GACxB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,qBAAAJ,OAAoBN,GACrD,C,sGCzBaa,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAI5DC,EADa,mCACOhB,OAAOU,GAC3BO,EAAUL,EAAaM,MAAM,EAAG,GAChCC,EAASN,EAAaO,QAAQ,GAC9BC,EAAaN,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMrB,IAAI,IAAEsB,KAAK,MAExD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,QAAS,EAAEC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAKf,EAAQgB,IAAKrB,EAAOsB,MAAM,WAEtCR,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CACGlB,EAAM,KAACc,EAAAA,EAAAA,MAAA,QAAAI,SAAA,CAAM,IAAEZ,EAAQ,WAE1BQ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,eAAaV,MAChBW,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIf,KACJgB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,SAIZ,E,oDC1Baa,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAKtBC,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAeK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sICgCnC,EAjCqB,WAAO,IAADI,EAAAC,EACzBC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC5BI,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRlD,EAAAA,EAAAA,IAAW8C,GAASK,MAAK,SAAAC,GAAG,OAAIP,EAAgBO,EAAIC,KAAK,GAC3D,GAAG,CAACP,KAECF,EACH,OAAO,KAET,IAAMU,EAA+B,QAAvBhB,EAAiB,QAAjBC,EAAGS,EAASO,aAAK,IAAAhB,OAAA,EAAdA,EAAgBiB,YAAI,IAAAlB,EAAAA,EAAI,IAEzC,OACEhB,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA/B,SAAA,EACEJ,EAAAA,EAAAA,MAACS,EAAS,CAAAL,SAAA,EACRC,EAAAA,EAAAA,KAACQ,EAAI,CAACuB,GAAIJ,EAAS5B,SAAC,oBACpBC,EAAAA,EAAAA,KAACvB,EAAS,CAACE,MAAOsC,QAEpBtB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAI,CAACuB,GAAI,OAAQH,MAAO,CAAEC,KAAMF,GAAW5B,SAAC,UAG7CC,EAAAA,EAAAA,KAACQ,EAAI,CAACuB,GAAI,UAAWH,MAAO,CAAEC,KAAMF,GAAW5B,SAAC,gBAIlDC,EAAAA,EAAAA,KAACgC,EAAAA,GAAM,MAGb,C","sources":["api/MoviesAPI.jsx","components/MovieCart/MovieCart.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9f52e0996f349aa48758bcf925b4265a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getTrending = () => {\n  return instance.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getByName = name => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const getDetails = id => {\n  return instance.get(`movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getCast = id => {\n  return instance.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviews = id => {\n  return instance.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","import { Box } from 'components/Box';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const release = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <Box display=\"flex\" gridGap={6}>\n      <div>\n        <img src={imgUrl} alt={title} width=\"350\" />\n      </div>\n      <div>\n        <h2>\n          {title} <span>({release})</span>\n        </h2>\n        <p>User score: {rating}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres:</h3>\n        <p>{genresList}</p>\n      </div>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n\nexport const Back = styled(NavLink)`\n  display: block;\n  margin: 30px 0;\n  color: #083ff5;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 22px;\n`;","import { MovieCard } from 'components/MovieCart/MovieCart';\nimport { getDetails } from 'api/MoviesAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Back, Container } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getDetails(movieId).then(res => setMovieDetails(res.data));\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <Back to={backLink}>‚Üê Go back</Back>\n        <MovieCard movie={movieDetails} />\n      </Container>\n      <div>\n        <Back to={'cast'} state={{ from: backLink }}>\n          Cast\n        </Back>\n        <Back to={'reviews'} state={{ from: backLink }}>\n          Reviews\n        </Back>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","instance","axios","baseURL","getTrending","get","concat","getByName","name","getDetails","id","getCast","getReviews","MovieCard","_ref","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","release","slice","rating","toFixed","genresList","map","genre","join","_jsxs","Box","display","gridGap","children","_jsx","src","alt","width","Container","styled","_templateObject","_taggedTemplateLiteral","Back","NavLink","_templateObject2","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","then","res","data","backLink","state","from","_Fragment","to","Outlet"],"sourceRoot":""}