{"version":3,"file":"static/js/186.5b4961c5.chunk.js","mappings":"uRAEMA,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,kCAMJC,EAAc,WACzB,OAAOH,EAASI,IAAI,8BAADC,OAA+BN,GACpD,EAEaO,EAAY,SAAAC,GACvB,OAAOP,EAASI,IAAI,wBAADC,OAAyBN,EAAO,WAAAM,OAAUE,GAC/D,EAEaC,EAAa,SAAAC,GACxB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,aAAAJ,OAAYN,GAC7C,EAEaW,EAAU,SAAAD,GACrB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,qBAAAJ,OAAoBN,GACrD,EAEaY,EAAa,SAAAF,GACxB,OAAOT,EAASI,IAAI,SAADC,OAAUI,EAAE,qBAAAJ,OAAoBN,GACrD,C,6ECEA,UAzBgB,WACd,IAAAa,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAWO,GAASG,MAAK,SAAAC,GAAG,OAAIL,EAAWK,EAAIC,KAAKC,QAAQ,GAC9D,GAAG,CAACN,IAECF,EAIL,OACES,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACsB,IAAnBV,EAAQW,QAAgB,iDACxBX,EAAQY,KAAI,SAAAC,GAAA,IAAGpB,EAAEoB,EAAFpB,GAAIqB,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OAAM,OACjCN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEM,EAAAA,EAAAA,KAAA,MAAAN,SAAKK,KACLC,EAAAA,EAAAA,KAAA,KAAAN,SAAII,MAFGrB,EAGJ,MAIb,C","sources":["api/MoviesAPI.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9f52e0996f349aa48758bcf925b4265a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getTrending = () => {\n  return instance.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getByName = name => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const getDetails = id => {\n  return instance.get(`movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getCast = id => {\n  return instance.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviews = id => {\n  return instance.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","import { getReviews } from 'api/MoviesAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(res => setReviews(res.data.results));\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <ul>\n      {reviews.length === 0 && \"Sorry, we don't have any reviews on this movie\"}\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <h3>{author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","instance","axios","baseURL","getTrending","get","concat","getByName","name","getDetails","id","getCast","getReviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","then","res","data","results","_jsxs","children","length","map","_ref","content","author","_jsx"],"sourceRoot":""}